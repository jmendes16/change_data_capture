services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cdc_db
    volumes:
      - ./database_init.sql:/docker-entrypoint-initdb.d/database_init.sql
    networks:
      - postgres-net

  pgadmin:
    image: dpage/pgadmin4:8.4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    networks:
      - postgres-net

  zookeeper:
      image: wurstmeister/zookeeper:latest
      platform: linux/amd64
      container_name: zookeeper
      ports:
      - "2181:2181"
      networks:
        - postgres-net

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - "9092:9092"
    networks:
      - postgres-net
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  python-app:
    build:
      context: .
      dockerfile: Dockerfile  # Builds the image from the Dockerfile in the current directory
    ports:
      - "8000:8000"
    networks:
      - postgres-net
  
networks:
  postgres-net:
